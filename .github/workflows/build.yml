name: build
on:
  pull_request:
  push:
    paths-ignore:
      - resources/**
    branches-ignore:
      - l10n

permissions:
  id-token: write
  contents: read

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: setup python for uploader
        uses: actions/setup-python@v4
        with:
          python-version : '3.10'
          cache: pip
      - name: cache loom-cache
        uses: actions/cache@v3
        with:
          path: .gradle/loom-cache
          key: loom-cache-${{ hashFiles('gradle.properties') }}
      - name: build
        id: gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --stacktrace --parallel clean build
      - name: Get Id Token
        if: github.ref == 'refs/heads/master'
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            let id_token = await core.getIDToken("https://mc.pswg.dev")
            core.setOutput('id_token', id_token)
      - name: upload
        if: always() && github.ref == 'refs/heads/master' && (steps.gradle.outcome == 'success' || steps.gradle.outcome == 'failure')
        continue-on-error: true
        run: |
          mkdir -p projects/pswg/build/libs
          cd projects/pswg/build/libs
          pip install -r ../../../../scripts/requirements.txt
          python ../../../../scripts/upload_dev.py --token ${{ steps.idtoken.outputs.id_token }} --result ${{ steps.gradle.outcome }} --webhook ${{ secrets.DISCORD_DEV_FEED_WEBHOOK }} --webhook ${{ secrets.DISCORD_RCOE_WEBHOOK }} --serverupdate ${{ secrets.SERVER_UPDATER }}
        env:
          BUILD_NUMBER: ${{ github.run_number }}
